# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# all_tools.py
# Created on: 2017-05-18 12:13:04.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: all_tools <v_Workspace_> <models_test_tools_sample_data>
# Description:
# ---------------------------------------------------------------------------

# Import arcpy module
import arcpy
from os.path import join
# geodata tools
from tools.geodata.compare_extents import CompareExtentsGeodataTool
from tools.geodata.delete import DeleteGeodataTool
from tools.geodata.extract_parent import ExtractParentGeodataTool
from tools.geodata.generate_names import GenerateNamesGeodataTool
from tools.geodata.rename import RenameGeodataTool
from tools.geodata.display import DisplayGeodataTool
from tools.geodata.search import SearchGeodataTool
from tools.geodata.select import SelectGeodataTool
from tools.geodata.describe import DescribeGeodataTool
# feature tools
from tools.feature.rasterise_by_table import RasteriseByTableTool
from tools.feature.clip import ClipFeatureTool
from tools.feature.copy import CopyFeatureTool
# raster tools
from tools.raster.aggregate import AggregateRasterTool
from tools.raster.block_statistics import BlockStatisticsRasterTool
from tools.raster.build_attribute_table import BuildAttributeTableRasterTool
from tools.raster.calculate_statistics import CalculateStatisticsRasterTool
from tools.raster.clip import ClipRasterTool
from tools.raster.copy import CopyRasterTool
from tools.raster.lookup_by_table import LookupByTableRasterTool
from tools.raster.values_at_points import ValuesAtPointsRasterTool
from tools.raster.reproject import ReprojectRasterTool
from tools.raster.reclass_by_table import ReclassByTableRasterTool
from tools.raster.resample import ResampleRasterTool
from tools.raster.set_no_data_value import SetNodataValueRasterTool
from tools.raster.set_value_to_null import SetValueToNullRasterTool
from tools.raster.transform import TransformRasterTool
from tools.raster.tweak_values import TweakValuesRasterTool
# from tools.raster.zonal_counts import ZonalCountsRasterTool
# metadata tools
from tools.metadata.audit import AuditMetadataTool
from tools.metadata.create_tips import CreateTipsTableMetadataTool
from tools.metadata.import_tips import ImportTipFilesToTableMetadataTool
from tools.metadata.export_tips import ExportTipsToFileMetadataTool
from tools.metadata.export_xml import ExportXmlMetadataTool
from tools.metadata.id_from_xml import GetIARIDFromXmlTool

geodata_tools = {SearchGeodataTool,
                 DescribeGeodataTool,
                 SelectGeodataTool,
                 DisplayGeodataTool,
                 CompareExtentsGeodataTool,
                 DeleteGeodataTool,
                 ExtractParentGeodataTool,
                 GenerateNamesGeodataTool,
                 RenameGeodataTool}

feature_tools = {RasteriseByTableTool,
                 CopyFeatureTool,
                 ClipFeatureTool}

raster_tools = {AggregateRasterTool,
                BlockStatisticsRasterTool,
                BuildAttributeTableRasterTool,
                CalculateStatisticsRasterTool,
                ClipRasterTool,
                CopyRasterTool,
                LookupByTableRasterTool,
                ValuesAtPointsRasterTool,
                ReprojectRasterTool,
                ReclassByTableRasterTool,
                ResampleRasterTool,
                SetNodataValueRasterTool,
                SetValueToNullRasterTool,
                TransformRasterTool,
                TweakValuesRasterTool}

metadata_tools = {AuditMetadataTool,
                  CreateTipsTableMetadataTool,
                  ImportTipFilesToTableMetadataTool,
                  ExportTipsToFileMetadataTool,
                  ExportXmlMetadataTool,
                  GetIARIDFromXmlTool}

self.tools = list(geodata_tools | feature_tools | raster_tools | metadata_tools)


# # Load required toolboxes
# arcpy.ImportToolbox("C:/Data/grid-garage-tests/models-test-tools/Grid Garage v3 Models_v005.tbx")

# # Script arguments
# v_Workspace_ = arcpy.GetParameterAsText(0)
# if v_Workspace_ == '#' or not v_Workspace_:
#     v_Workspace_ = "%Workspace%" # provide a default value if unspecified

# models_test_tools_sample_data = arcpy.GetParameterAsText(1)
# if models_test_tools_sample_data == '#' or not models_test_tools_sample_data:
#     models_test_tools_sample_data = "C:\\Data\\grid-garage-tests\\models-test-tools_sample-data" # provide a default value if unspecified


class TestAllToolsTool(object):

    class ToolValidator(object):
        """Class for validating a tool's parameter values and controlling
        the behavior of the tool's dialog."""

        def __init__(self, parameters):
            """Setup arcpy and the list of tool parameters."""
            self.params = parameters

        def initializeParameters(self):
            """Refine the properties of a tool's parameters.  This method is
            called when the tool is opened."""
            return

        def updateParameters(self):
            """Modify the values and properties of parameters before internal
            validation is performed.  This method is called whenever a parameter
            has been changed."""
            return

        def updateMessages(self):
            """Modify the messages created by internal validation for each tool
            parameter.  This method is called after internal validation."""
            return

    @log.log
    def __init__(self):

        self.label = u'Test All Grid Garage Tools'
        self.description = u'Tests all of the currently implemented Grid Garage tools'
        self.canRunInBackground = True

        return

    @log.log
    def getParameterInfo(self):

        param0 = ap.Parameter()
        param0.name = u'output_workspace'
        param0.displayName = u'Output Data Workspace'
        param0.parameterType = 'Required'
        param0.direction = 'Input'
        param0.datatype = u'DEWorkspace'

        param1 = ap.Parameter()
        param1.name = u'input_workspace'
        param1.displayName = u'Input Data Workspace'
        param1.parameterType = 'Required'
        param1.direction = 'Input'
        param1.datatype = u'DEWorkspace'

        return [param0, param1]

    @log.log
    def isLicensed(self):

        return True

    @log.log
    def updateParameters(self, parameters):

        validator = getattr(self, 'ToolValidator', None)
        if validator:
            return validator(parameters).updateParameters()

        return

    @log.log
    def updateMessages(self, parameters):

        validator = getattr(self, 'ToolValidator', None)
        if validator:
            return validator(parameters).updateMessages()

        return

    @log.log
    def execute(self, parameters, messages):

        # Load required toolboxes
        arcpy.ImportToolbox("C:/Data/grid-garage-tests/models-test-tools/Grid Garage v3 Models_v005.tbx")

        out_ws = parameters[0].valueAsText
        in_ws = parameters[1].valueAsText
        fail_ws = join(out_ws, "fails.gdb")  # "C:\\Data\\grid-garage-tests\\models-test-tools\\FAILS.gdb"

        # tool = "Buffer_management"
        # arguments = ["input", "output", 100]
        # result = getattr(arcpy, tool)(*arguments)

        StudyArea_Armidale = "C:\\Data\\grid-garage-sample-data\\StudyArea_Armidale"
        Result_Table_Search__6_ = "C:\\Data\\grid-garage-tests\\models-test-tools\\test.gdb\\T0110_01Search_20170518_114437"
        Result_Table_Search__9_ = Result_Table_Search__6_
        Result_Table_Search__7_ = Result_Table_Search__9_
        Result_Table_Search__8_ = Result_Table_Search__7_
        Result_Table_Search__10_ = Result_Table_Search__8_
        Result_Table_Search__11_ = Result_Table_Search__10_
        Result_Table_Search__20_ = Result_Table_Search__11_
        Result_Table_Search__12_ = Result_Table_Search__20_
        Result_Table_Search__16_ = Result_Table_Search__12_
        Result_Table_Search__13_ = Result_Table_Search__16_
        Result_Table_Search__14_ = Result_Table_Search__13_
        Result_Table_Search__15_ = Result_Table_Search__14_
        Result_Table_Search__17_ = Result_Table_Search__15_
        Result_Table_Search__18_ = Result_Table_Search__17_
        Result_Table_Search__19_ = Result_Table_Search__18_
        Result_Table_Search = Result_Table_Search__19_
        Result_Table_Search__2_ = Result_Table_Search
        T0310_01Search_20170516_094116 = Result_Table_Search__2_
        T0320_01Search_20170516_094141 = T0310_01Search_20170516_094116
        Result_Table_Search__3_ = T0320_01Search_20170516_094141
        Result_Table_Search__4_ = Result_Table_Search__3_
        Result_Table_Search__5_ = Result_Table_Search__4_
        T0430_01_GeodataSelect_20170518_095728 = Result_Table_Search__5_
        T0170_04__LookupByTableRaster_20170517_174859_FAIL = T0430_01_GeodataSelect_20170518_095728

        # Process: GG3_Test_Raster_Aggregate (110)
        arcpy.Model3103_GGV3_005("C:\\Data\\grid-garage-tests\\models-test-tools_sample-data;C:\\Data\\grid-garage-sample-data\\StudyArea_Armidale",
                                 "raster_band_meanCellHeight = 25", "NODATA", "TRUNCATE", "10", v_Workspace_, "T0110")

        # Process: GG3_Test_Raster_Block_Statistics (120)
        arcpy.Model311_GGV3_005("C:\\Data\\grid-garage-tests\\models-test-tools_sample-data;C:\\Data\\grid-garage-sample-data\\StudyArea_Armidale",
                                "raster_band_meanCellHeight = 25", v_Workspace_, "T0120")

        # Process: GG3_Test_Raster_Build_Attribute_Table (130)
        arcpy.Model312322_GGV3_005("C:\\Data\\grid-garage-tests\\models-test-tools_sample-data;C:\\Data\\grid-garage-sample-data\\StudyArea_Armidale",
                                   v_Workspace_, "T0130", "raster_band_meanCellHeight = 30")

        # Process: GG3_Test_Raster_Calculate_Statistic (140)
        arcpy.Model313_GGV3_005("C:\\Data\\grid-garage-tests\\models-test-tools_sample-data;C:\\Data\\grid-garage-sample-data\\StudyArea_Armidale",
                                "raster_band_meanCellHeight = 30", v_Workspace_, "T0140")

        # Process: GG3_Test_Raster_Clip (150)
        arcpy.Model314_GGV3_005("C:\\Data\\grid-garage-tests\\models-test-tools_sample-data;C:\\Data\\grid-garage-sample-data\\StudyArea_Armidale",
                                v_Workspace_, "T0150")

        # Process: GG3_Test_Raster_Copy (160)
        arcpy.Model315_GGV3_005("C:\\Data\\grid-garage-tests\\models-test-tools_sample-data;C:\\Data\\grid-garage-sample-data\\StudyArea_Armidale",
                                "dataset_datasetType = 'RasterDataset'", v_Workspace_, "T0160")

        # Process: GG3_Test_Raster_Lookup_by_Table (170)
        arcpy.Model32_GGV3_005("C:\\Data\\grid-garage-tests\\models-test-tools_sample-data;C:\\Data\\grid-garage-sample-data\\StudyArea_Armidale",
                               "general_baseName = 'demfill25m'", v_Workspace_, "T0170")

        # Process: GG3_Test_Raster_Reclass_by_Table  (180)
        arcpy.Model33_GGV3_005("C:\\Data\\grid-garage-tests\\models-test-tools_sample-data;C:\\Data\\grid-garage-sample-data\\StudyArea_Armidale",
                               "raster_band_meanCellHeight = 25", v_Workspace_, "T0180")

        # Process: GG3_Test_Raster_Reproject (190)
        arcpy.Model34_GGV3_005("C:\\Data\\grid-garage-tests\\models-test-tools_sample-data;C:\\Data\\grid-garage-sample-data\\StudyArea_Armidale",
                               "raster_band_meanCellHeight = 25", v_Workspace_, "T0190")

        # Process: GG3_Test_Raster_Resample (200)
        arcpy.Model35_GGV3_005("C:\\Data\\grid-garage-tests\\models-test-tools_sample-data;C:\\Data\\grid-garage-sample-data\\StudyArea_Armidale",
                               "dataset_spatialReference = 'GDA_1994_MGA_Zone_56'", v_Workspace_, "T0200")

        # Process: GG3_Test_Raster_Set_NoData_Value (210)
        arcpy.Model36_GGV3_005("C:\\Data\\grid-garage-tests\\models-test-tools_sample-data;C:\\Data\\grid-garage-sample-data\\StudyArea_Armidale",
                               "general_baseName = 'SPOT5_WoodyExtent_Armidale_sml'", v_Workspace_, "T0210")

        # Process: GG3_Test_Raster_Set_Value_to_Null (220)
        arcpy.Model37_GGV3_005("C:\\Data\\grid-garage-tests\\models-test-tools_sample-data;C:\\Data\\grid-garage-sample-data\\StudyArea_Armidale",
                               "general_baseName = 'netvegkc100m_sml'", v_Workspace_, "T0220")

        # Process: GG3_Test_Raster_Transform (230)
        arcpy.Model38_GGV3_005("C:\\Data\\grid-garage-tests\\models-test-tools_sample-data;C:\\Data\\grid-garage-sample-data\\StudyArea_Armidale",
                               "general_baseName = 'netvegkc100m_sml'", v_Workspace_, "T0230")

        # Process: GG3_Test_Raster_Tweak_Values (240)
        arcpy.Model39_GGV3_005("C:\\Data\\grid-garage-tests\\models-test-tools_sample-data;C:\\Data\\grid-garage-sample-data\\StudyArea_Armidale",
                               "general_baseName = 'demfill25m'", v_Workspace_, "T0240")

        # Process: GG3_Test_Raster_Tweak_Values_INT (250)
        arcpy.Model393_GGV3_005("C:\\Data\\grid-garage-tests\\models-test-tools_sample-data;C:\\Data\\grid-garage-sample-data\\StudyArea_Armidale",
                                "general_baseName = 'demfill25m'", v_Workspace_, "T0250")

        # Process: GG3_Test_Raster_Values_at_Points (260)
        arcpy.Model392_GGV3_005("C:\\Data\\grid-garage-tests\\models-test-tools_sample-data;C:\\Data\\grid-garage-sample-data\\StudyArea_Armidale",
                                "dataset_spatialReference = 'GDA_1994_MGA_Zone_56'", v_Workspace_, "T0260")

        # Process: GG3_Test_Feature_Clip (300)
        arcpy.Model5_GGV3_005("C:\\Data\\grid-garage-tests\\models-test-tools_sample-data",
                              "general_name = 'netvegkc100m_sml.shp' OR general_name = 'Armidale_Dumaresq_Council_GDAz56.shp' OR general_name = 'VegBorderRiversGwydir_Comp09_VIS3801.shp'",
                              "T0300", v_Workspace_)

        # Process: GG3_Test_Feature_Copy
        arcpy.Model6_GGV3_005("T0310", v_Workspace_)

        # Process: GG3_Test_Feature_RasteriseByTable
        arcpy.Model7_GGV3_005("C:\\Data\\grid-garage-tests\\models-test-tools_sample-data;C:\\Data\\grid-garage-sample-data\\StudyArea_Armidale", "T0320",
                              v_Workspace_)

        # Process: GG3_Test_Geodata_CompareExtents (400)
        arcpy.Model52_GGV3_005("C:\\Data\\grid-garage-tests\\models-test-tools_sample-data;C:\\Data\\grid-garage-sample-data\\StudyArea_Armidale", "", "T0400",
                               v_Workspace_)

        # Process: GG3_Test_Geodata_Copy_Delete (410)
        arcpy.Model522_GGV3_005("T0410", v_Workspace_)

        # Process: GG3_Test_Geodata_GenerateNamesRenameDisplay (420)
        arcpy.Model523_GGV3_005("dataset_spatialReference = 'GDA_1994_MGA_Zone_56'", "T0420", v_Workspace_)

        # Process: GG3_Test_Geodata_Select_ListWorkspaceTables
        arcpy.Model1_GGV3_005("T0430", FAILS_gdb, v_Workspace_)

        # Process: GG3_Iterate_Tables_FAILS
        arcpy.Model42_GGV3_005(FAILS_gdb, "*_FAIL", v_Workspace_)

        # Process: GG3_Iterate_Tables
        arcpy.Model4_GGV3_005(FAILS_gdb, "*__*", v_Workspace_)


        class Toolbox(object):
            def __init__(self):
                """Define the toolbox (the name of the toolbox is the name of the .pyt file)."""
                self.label = "Grid Garage v3"
                self.alias = "GridGarage"

